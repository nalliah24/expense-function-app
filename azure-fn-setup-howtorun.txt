// nnalliah2 account
// Azure functions sending email

project: expense-api
contains call to do httptrigger from client. QueueSendEmailController handles this call.

Insicde the controller, an httpTrigger call is made to below address with request data..
uri:  https://ms-expense-func-app.azurewebsites.net/api/onExpSubmittedAddToQueToCreatePdfAndSendMail?code=<< code from azure>>
method: POST
request data:
        -Headers @{ "content-type"="application/json" }
        -Body '{"user": {"userId": "user1"}, "expenseId": 2}'

// QUOTES are important on the request body

1) Testing PDF is created:
While developing, testing can be done using PShell.
Command:
iwr -Method POST -Uri https://ms-expense-func-app.azurewebsites.net/api/onExpSubmittedAddToQueToCreatePdfAndSendMail?code=<<.. code from azure ...>> -Headers @{ "content-type"="application/json" } -Body '{"user": {"userId": "user1"}, "expenseId": 2}'

In Azure open the editor and see if the request is coming through and pdf is created under reports folder.

2) Testing Email is sent out:
Use step one to send the email as well. Or use [test feature] from azure



// AZURE SendGrid onExpSubmittedAddToQueToCreatePdfAndSendMail1)
add bindings to  function.json
{
  "bindings": [
    {
      "name": "inputQueuePdfCreatedInLocal",
      "type": "queueTrigger",
      "direction": "in",
      "queueName": "pdf-created-in-local",
      "connection": "AzureWebJobsStorage"
    },
    {
      "type": "sendGrid",
      "name": "message",
      "direction": "out",
      "apiKey": "mnalliahSGridApikey",
      "from": "majuurnalliah@gmail.com",
      "subject": "Expense Report (MS)",
      "text": "Expense submitted (MS)"
    },
}

2)
add config key and value
goto: ms-expense-func-app  ->  configurations -> Applicaiton Settings -> Add New appliction setting

sample: "mnalliahSGridApikey" : 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

// How to get the config key.
https://docs.microsoft.com/en-us/azure/sendgrid-dotnet-how-to-send-email

